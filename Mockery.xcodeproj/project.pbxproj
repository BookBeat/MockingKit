// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 52;
	objects = {

/* Begin PBXAggregateTarget section */
		"Mockery::MockeryPackageTests::ProductTarget" /* MockeryPackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_141 /* Build configuration list for PBXAggregateTarget "MockeryPackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_144 /* PBXTargetDependency */,
			);
			name = MockeryPackageTests;
			productName = MockeryPackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		84F42F912343F60A00F09426 /* Quick in Frameworks */ = {isa = PBXBuildFile; productRef = 84F42F902343F60A00F09426 /* Quick */; };
		84F42F942343F61F00F09426 /* Nimble in Frameworks */ = {isa = PBXBuildFile; productRef = 84F42F932343F61F00F09426 /* Nimble */; };
		OBJ_130 /* Escaping.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_9 /* Escaping.swift */; };
		OBJ_131 /* Execution.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* Execution.swift */; };
		OBJ_132 /* Mock.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* Mock.swift */; };
		OBJ_139 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
		OBJ_150 /* MockClass.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* MockClass.swift */; };
		OBJ_151 /* MockProtocol.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* MockProtocol.swift */; };
		OBJ_152 /* MockTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* MockTests.swift */; };
		OBJ_153 /* XCTestManifests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* XCTestManifests.swift */; };
		OBJ_158 /* Mockery.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Mockery::Mockery::Product" /* Mockery.framework */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		84F42F882343F43300F09426 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Mockery::Mockery";
			remoteInfo = Mockery;
		};
		84F42F892343F43400F09426 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Mockery::MockeryTests";
			remoteInfo = MockeryTests;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		84F42F8B2343F5A800F09426 /* .swiftlint.yml */ = {isa = PBXFileReference; lastKnownFileType = text.yaml; path = .swiftlint.yml; sourceTree = "<group>"; };
		84F42F8C2343F5A800F09426 /* .swift-version */ = {isa = PBXFileReference; lastKnownFileType = text; path = ".swift-version"; sourceTree = "<group>"; };
		84F42F8D2343F5A800F09426 /* .gitignore */ = {isa = PBXFileReference; lastKnownFileType = text; path = .gitignore; sourceTree = "<group>"; };
		84F42F8E2343F5B300F09426 /* Fastfile */ = {isa = PBXFileReference; lastKnownFileType = text; name = Fastfile; path = fastlane/Fastfile; sourceTree = "<group>"; };
		"Mockery::Mockery::Product" /* Mockery.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = Mockery.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Mockery::MockeryTests::Product" /* MockeryTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = MockeryTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_10 /* Execution.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Execution.swift; sourceTree = "<group>"; };
		OBJ_100 /* SatisfyAnyOf.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SatisfyAnyOf.swift; sourceTree = "<group>"; };
		OBJ_101 /* ThrowAssertion.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ThrowAssertion.swift; sourceTree = "<group>"; };
		OBJ_102 /* ThrowError.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ThrowError.swift; sourceTree = "<group>"; };
		OBJ_103 /* ToSucceed.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ToSucceed.swift; sourceTree = "<group>"; };
		OBJ_105 /* Await.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Await.swift; sourceTree = "<group>"; };
		OBJ_106 /* Errors.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Errors.swift; sourceTree = "<group>"; };
		OBJ_107 /* Functional.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Functional.swift; sourceTree = "<group>"; };
		OBJ_108 /* SourceLocation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SourceLocation.swift; sourceTree = "<group>"; };
		OBJ_109 /* Stringers.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Stringers.swift; sourceTree = "<group>"; };
		OBJ_11 /* Mock.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Mock.swift; sourceTree = "<group>"; };
		OBJ_110 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = /Users/admin/Projects/Mockery/.build/checkouts/Nimble/Package.swift; sourceTree = "<group>"; };
		OBJ_121 /* Mockery.podspec */ = {isa = PBXFileReference; lastKnownFileType = text; path = Mockery.podspec; sourceTree = "<group>"; };
		OBJ_122 /* LICENSE */ = {isa = PBXFileReference; lastKnownFileType = text; path = LICENSE; sourceTree = "<group>"; };
		OBJ_123 /* README.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = README.md; sourceTree = "<group>"; };
		OBJ_124 /* RELEASE_NOTES.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = RELEASE_NOTES.md; sourceTree = "<group>"; };
		OBJ_14 /* MockClass.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MockClass.swift; sourceTree = "<group>"; };
		OBJ_15 /* MockProtocol.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MockProtocol.swift; sourceTree = "<group>"; };
		OBJ_16 /* MockTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MockTests.swift; sourceTree = "<group>"; };
		OBJ_17 /* XCTestManifests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = XCTestManifests.swift; sourceTree = "<group>"; };
		OBJ_21 /* Behavior.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Behavior.swift; sourceTree = "<group>"; };
		OBJ_22 /* Callsite.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Callsite.swift; sourceTree = "<group>"; };
		OBJ_24 /* Configuration.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Configuration.swift; sourceTree = "<group>"; };
		OBJ_25 /* QuickConfiguration.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = QuickConfiguration.swift; sourceTree = "<group>"; };
		OBJ_27 /* DSL.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DSL.swift; sourceTree = "<group>"; };
		OBJ_28 /* World+DSL.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "World+DSL.swift"; sourceTree = "<group>"; };
		OBJ_29 /* ErrorUtility.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ErrorUtility.swift; sourceTree = "<group>"; };
		OBJ_30 /* Example.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Example.swift; sourceTree = "<group>"; };
		OBJ_31 /* ExampleGroup.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ExampleGroup.swift; sourceTree = "<group>"; };
		OBJ_32 /* ExampleMetadata.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ExampleMetadata.swift; sourceTree = "<group>"; };
		OBJ_33 /* Filter.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Filter.swift; sourceTree = "<group>"; };
		OBJ_35 /* Closures.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Closures.swift; sourceTree = "<group>"; };
		OBJ_36 /* ExampleHooks.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ExampleHooks.swift; sourceTree = "<group>"; };
		OBJ_37 /* HooksPhase.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HooksPhase.swift; sourceTree = "<group>"; };
		OBJ_38 /* SuiteHooks.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SuiteHooks.swift; sourceTree = "<group>"; };
		OBJ_39 /* NSBundle+CurrentTestBundle.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "NSBundle+CurrentTestBundle.swift"; sourceTree = "<group>"; };
		OBJ_40 /* QuickMain.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = QuickMain.swift; sourceTree = "<group>"; };
		OBJ_41 /* QuickSelectedTestSuiteBuilder.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = QuickSelectedTestSuiteBuilder.swift; sourceTree = "<group>"; };
		OBJ_42 /* QuickSpec.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = QuickSpec.swift; sourceTree = "<group>"; };
		OBJ_43 /* QuickTestSuite.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = QuickTestSuite.swift; sourceTree = "<group>"; };
		OBJ_44 /* String+C99ExtendedIdentifier.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "String+C99ExtendedIdentifier.swift"; sourceTree = "<group>"; };
		OBJ_45 /* URL+FileName.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "URL+FileName.swift"; sourceTree = "<group>"; };
		OBJ_46 /* World.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = World.swift; sourceTree = "<group>"; };
		OBJ_48 /* QuickSpecBase.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = QuickSpecBase.m; sourceTree = "<group>"; };
		OBJ_50 /* QuickSpecBase.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = QuickSpecBase.h; sourceTree = "<group>"; };
		OBJ_51 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = /Users/admin/Projects/Mockery/.build/checkouts/Quick/Package.swift; sourceTree = "<group>"; };
		OBJ_55 /* AdapterProtocols.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AdapterProtocols.swift; sourceTree = "<group>"; };
		OBJ_56 /* AssertionDispatcher.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AssertionDispatcher.swift; sourceTree = "<group>"; };
		OBJ_57 /* AssertionRecorder.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AssertionRecorder.swift; sourceTree = "<group>"; };
		OBJ_58 /* NMBExpectation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NMBExpectation.swift; sourceTree = "<group>"; };
		OBJ_59 /* NMBObjCMatcher.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NMBObjCMatcher.swift; sourceTree = "<group>"; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_60 /* NimbleEnvironment.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NimbleEnvironment.swift; sourceTree = "<group>"; };
		OBJ_61 /* NimbleXCTestHandler.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NimbleXCTestHandler.swift; sourceTree = "<group>"; };
		OBJ_63 /* ExceptionCapture.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ExceptionCapture.swift; sourceTree = "<group>"; };
		OBJ_64 /* DSL+Wait.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "DSL+Wait.swift"; sourceTree = "<group>"; };
		OBJ_65 /* DSL.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DSL.swift; sourceTree = "<group>"; };
		OBJ_66 /* Expectation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Expectation.swift; sourceTree = "<group>"; };
		OBJ_67 /* ExpectationMessage.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ExpectationMessage.swift; sourceTree = "<group>"; };
		OBJ_68 /* Expression.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Expression.swift; sourceTree = "<group>"; };
		OBJ_69 /* FailureMessage.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FailureMessage.swift; sourceTree = "<group>"; };
		OBJ_71 /* AllPass.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AllPass.swift; sourceTree = "<group>"; };
		OBJ_72 /* Async.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Async.swift; sourceTree = "<group>"; };
		OBJ_73 /* BeAKindOf.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeAKindOf.swift; sourceTree = "<group>"; };
		OBJ_74 /* BeAnInstanceOf.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeAnInstanceOf.swift; sourceTree = "<group>"; };
		OBJ_75 /* BeCloseTo.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeCloseTo.swift; sourceTree = "<group>"; };
		OBJ_76 /* BeEmpty.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeEmpty.swift; sourceTree = "<group>"; };
		OBJ_77 /* BeGreaterThan.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeGreaterThan.swift; sourceTree = "<group>"; };
		OBJ_78 /* BeGreaterThanOrEqualTo.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeGreaterThanOrEqualTo.swift; sourceTree = "<group>"; };
		OBJ_79 /* BeIdenticalTo.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeIdenticalTo.swift; sourceTree = "<group>"; };
		OBJ_80 /* BeLessThan.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeLessThan.swift; sourceTree = "<group>"; };
		OBJ_81 /* BeLessThanOrEqual.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeLessThanOrEqual.swift; sourceTree = "<group>"; };
		OBJ_82 /* BeLogical.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeLogical.swift; sourceTree = "<group>"; };
		OBJ_83 /* BeNil.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeNil.swift; sourceTree = "<group>"; };
		OBJ_84 /* BeVoid.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeVoid.swift; sourceTree = "<group>"; };
		OBJ_85 /* BeginWith.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeginWith.swift; sourceTree = "<group>"; };
		OBJ_86 /* Contain.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Contain.swift; sourceTree = "<group>"; };
		OBJ_87 /* ContainElementSatisfying.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ContainElementSatisfying.swift; sourceTree = "<group>"; };
		OBJ_88 /* ElementsEqual.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ElementsEqual.swift; sourceTree = "<group>"; };
		OBJ_89 /* EndWith.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = EndWith.swift; sourceTree = "<group>"; };
		OBJ_9 /* Escaping.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Escaping.swift; sourceTree = "<group>"; };
		OBJ_90 /* Equal.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Equal.swift; sourceTree = "<group>"; };
		OBJ_91 /* HaveCount.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HaveCount.swift; sourceTree = "<group>"; };
		OBJ_92 /* Match.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Match.swift; sourceTree = "<group>"; };
		OBJ_93 /* MatchError.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MatchError.swift; sourceTree = "<group>"; };
		OBJ_94 /* MatcherFunc.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MatcherFunc.swift; sourceTree = "<group>"; };
		OBJ_95 /* MatcherProtocols.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MatcherProtocols.swift; sourceTree = "<group>"; };
		OBJ_96 /* PostNotification.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PostNotification.swift; sourceTree = "<group>"; };
		OBJ_97 /* Predicate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Predicate.swift; sourceTree = "<group>"; };
		OBJ_98 /* RaisesException.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RaisesException.swift; sourceTree = "<group>"; };
		OBJ_99 /* SatisfyAllOf.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SatisfyAllOf.swift; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_133 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_154 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				84F42F942343F61F00F09426 /* Nimble in Frameworks */,
				84F42F912343F60A00F09426 /* Quick in Frameworks */,
				OBJ_158 /* Mockery.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		84F42F8A2343F56C00F09426 /* Project Files */ = {
			isa = PBXGroup;
			children = (
				84F42F8D2343F5A800F09426 /* .gitignore */,
				84F42F8C2343F5A800F09426 /* .swift-version */,
				84F42F8B2343F5A800F09426 /* .swiftlint.yml */,
				84F42F8E2343F5B300F09426 /* Fastfile */,
				OBJ_122 /* LICENSE */,
				OBJ_121 /* Mockery.podspec */,
				OBJ_123 /* README.md */,
				OBJ_124 /* RELEASE_NOTES.md */,
			);
			name = "Project Files";
			sourceTree = "<group>";
		};
		OBJ_104 /* Utils */ = {
			isa = PBXGroup;
			children = (
				OBJ_105 /* Await.swift */,
				OBJ_106 /* Errors.swift */,
				OBJ_107 /* Functional.swift */,
				OBJ_108 /* SourceLocation.swift */,
				OBJ_109 /* Stringers.swift */,
			);
			path = Utils;
			sourceTree = "<group>";
		};
		OBJ_111 /* Products */ = {
			isa = PBXGroup;
			children = (
				"Mockery::MockeryTests::Product" /* MockeryTests.xctest */,
				"Mockery::Mockery::Product" /* Mockery.framework */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_12 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_13 /* MockeryTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_13 /* MockeryTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_14 /* MockClass.swift */,
				OBJ_15 /* MockProtocol.swift */,
				OBJ_16 /* MockTests.swift */,
				OBJ_17 /* XCTestManifests.swift */,
			);
			name = MockeryTests;
			path = Tests/MockeryTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_18 /* Dependencies */ = {
			isa = PBXGroup;
			children = (
				OBJ_19 /* Quick 2.2.0 */,
				OBJ_52 /* Nimble 8.0.2 */,
			);
			name = Dependencies;
			sourceTree = "<group>";
		};
		OBJ_19 /* Quick 2.2.0 */ = {
			isa = PBXGroup;
			children = (
				OBJ_20 /* Quick */,
				OBJ_47 /* QuickSpecBase */,
				OBJ_51 /* Package.swift */,
			);
			name = "Quick 2.2.0";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_20 /* Quick */ = {
			isa = PBXGroup;
			children = (
				OBJ_21 /* Behavior.swift */,
				OBJ_22 /* Callsite.swift */,
				OBJ_23 /* Configuration */,
				OBJ_26 /* DSL */,
				OBJ_29 /* ErrorUtility.swift */,
				OBJ_30 /* Example.swift */,
				OBJ_31 /* ExampleGroup.swift */,
				OBJ_32 /* ExampleMetadata.swift */,
				OBJ_33 /* Filter.swift */,
				OBJ_34 /* Hooks */,
				OBJ_39 /* NSBundle+CurrentTestBundle.swift */,
				OBJ_40 /* QuickMain.swift */,
				OBJ_41 /* QuickSelectedTestSuiteBuilder.swift */,
				OBJ_42 /* QuickSpec.swift */,
				OBJ_43 /* QuickTestSuite.swift */,
				OBJ_44 /* String+C99ExtendedIdentifier.swift */,
				OBJ_45 /* URL+FileName.swift */,
				OBJ_46 /* World.swift */,
			);
			name = Quick;
			path = .build/checkouts/Quick/Sources/Quick;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_23 /* Configuration */ = {
			isa = PBXGroup;
			children = (
				OBJ_24 /* Configuration.swift */,
				OBJ_25 /* QuickConfiguration.swift */,
			);
			path = Configuration;
			sourceTree = "<group>";
		};
		OBJ_26 /* DSL */ = {
			isa = PBXGroup;
			children = (
				OBJ_27 /* DSL.swift */,
				OBJ_28 /* World+DSL.swift */,
			);
			path = DSL;
			sourceTree = "<group>";
		};
		OBJ_34 /* Hooks */ = {
			isa = PBXGroup;
			children = (
				OBJ_35 /* Closures.swift */,
				OBJ_36 /* ExampleHooks.swift */,
				OBJ_37 /* HooksPhase.swift */,
				OBJ_38 /* SuiteHooks.swift */,
			);
			path = Hooks;
			sourceTree = "<group>";
		};
		OBJ_47 /* QuickSpecBase */ = {
			isa = PBXGroup;
			children = (
				OBJ_48 /* QuickSpecBase.m */,
				OBJ_49 /* include */,
			);
			name = QuickSpecBase;
			path = .build/checkouts/Quick/Sources/QuickSpecBase;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_49 /* include */ = {
			isa = PBXGroup;
			children = (
				OBJ_50 /* QuickSpecBase.h */,
			);
			path = include;
			sourceTree = "<group>";
		};
		OBJ_5 = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_12 /* Tests */,
				OBJ_18 /* Dependencies */,
				OBJ_111 /* Products */,
				84F42F8A2343F56C00F09426 /* Project Files */,
			);
			sourceTree = "<group>";
		};
		OBJ_52 /* Nimble 8.0.2 */ = {
			isa = PBXGroup;
			children = (
				OBJ_53 /* Nimble */,
				OBJ_110 /* Package.swift */,
			);
			name = "Nimble 8.0.2";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_53 /* Nimble */ = {
			isa = PBXGroup;
			children = (
				OBJ_54 /* Adapters */,
				OBJ_64 /* DSL+Wait.swift */,
				OBJ_65 /* DSL.swift */,
				OBJ_66 /* Expectation.swift */,
				OBJ_67 /* ExpectationMessage.swift */,
				OBJ_68 /* Expression.swift */,
				OBJ_69 /* FailureMessage.swift */,
				OBJ_70 /* Matchers */,
				OBJ_104 /* Utils */,
			);
			name = Nimble;
			path = .build/checkouts/Nimble/Sources/Nimble;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_54 /* Adapters */ = {
			isa = PBXGroup;
			children = (
				OBJ_55 /* AdapterProtocols.swift */,
				OBJ_56 /* AssertionDispatcher.swift */,
				OBJ_57 /* AssertionRecorder.swift */,
				OBJ_58 /* NMBExpectation.swift */,
				OBJ_59 /* NMBObjCMatcher.swift */,
				OBJ_60 /* NimbleEnvironment.swift */,
				OBJ_61 /* NimbleXCTestHandler.swift */,
				OBJ_62 /* NonObjectiveC */,
			);
			path = Adapters;
			sourceTree = "<group>";
		};
		OBJ_62 /* NonObjectiveC */ = {
			isa = PBXGroup;
			children = (
				OBJ_63 /* ExceptionCapture.swift */,
			);
			path = NonObjectiveC;
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* Mockery */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_70 /* Matchers */ = {
			isa = PBXGroup;
			children = (
				OBJ_71 /* AllPass.swift */,
				OBJ_72 /* Async.swift */,
				OBJ_73 /* BeAKindOf.swift */,
				OBJ_74 /* BeAnInstanceOf.swift */,
				OBJ_75 /* BeCloseTo.swift */,
				OBJ_76 /* BeEmpty.swift */,
				OBJ_77 /* BeGreaterThan.swift */,
				OBJ_78 /* BeGreaterThanOrEqualTo.swift */,
				OBJ_79 /* BeIdenticalTo.swift */,
				OBJ_80 /* BeLessThan.swift */,
				OBJ_81 /* BeLessThanOrEqual.swift */,
				OBJ_82 /* BeLogical.swift */,
				OBJ_83 /* BeNil.swift */,
				OBJ_84 /* BeVoid.swift */,
				OBJ_85 /* BeginWith.swift */,
				OBJ_86 /* Contain.swift */,
				OBJ_87 /* ContainElementSatisfying.swift */,
				OBJ_88 /* ElementsEqual.swift */,
				OBJ_89 /* EndWith.swift */,
				OBJ_90 /* Equal.swift */,
				OBJ_91 /* HaveCount.swift */,
				OBJ_92 /* Match.swift */,
				OBJ_93 /* MatchError.swift */,
				OBJ_94 /* MatcherFunc.swift */,
				OBJ_95 /* MatcherProtocols.swift */,
				OBJ_96 /* PostNotification.swift */,
				OBJ_97 /* Predicate.swift */,
				OBJ_98 /* RaisesException.swift */,
				OBJ_99 /* SatisfyAllOf.swift */,
				OBJ_100 /* SatisfyAnyOf.swift */,
				OBJ_101 /* ThrowAssertion.swift */,
				OBJ_102 /* ThrowError.swift */,
				OBJ_103 /* ToSucceed.swift */,
			);
			path = Matchers;
			sourceTree = "<group>";
		};
		OBJ_8 /* Mockery */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* Escaping.swift */,
				OBJ_10 /* Execution.swift */,
				OBJ_11 /* Mock.swift */,
			);
			name = Mockery;
			path = Sources/Mockery;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"Mockery::Mockery" /* Mockery */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_126 /* Build configuration list for PBXNativeTarget "Mockery" */;
			buildPhases = (
				84F42F952343F64B00F09426 /* SwiftLint */,
				OBJ_129 /* Sources */,
				OBJ_133 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Mockery;
			productName = Mockery;
			productReference = "Mockery::Mockery::Product" /* Mockery.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Mockery::MockeryTests" /* MockeryTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_146 /* Build configuration list for PBXNativeTarget "MockeryTests" */;
			buildPhases = (
				OBJ_149 /* Sources */,
				OBJ_154 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_165 /* PBXTargetDependency */,
			);
			name = MockeryTests;
			packageProductDependencies = (
				84F42F902343F60A00F09426 /* Quick */,
				84F42F932343F61F00F09426 /* Nimble */,
			);
			productName = MockeryTests;
			productReference = "Mockery::MockeryTests::Product" /* MockeryTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"Mockery::SwiftPMPackageDescription" /* MockeryPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_135 /* Build configuration list for PBXNativeTarget "MockeryPackageDescription" */;
			buildPhases = (
				OBJ_138 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = MockeryPackageDescription;
			productName = MockeryPackageDescription;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftMigration = 9999;
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "Mockery" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5;
			packageReferences = (
				84F42F8F2343F60A00F09426 /* XCRemoteSwiftPackageReference "Quick" */,
				84F42F922343F61F00F09426 /* XCRemoteSwiftPackageReference "Nimble" */,
			);
			productRefGroup = OBJ_111 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"Mockery::Mockery" /* Mockery */,
				"Mockery::SwiftPMPackageDescription" /* MockeryPackageDescription */,
				"Mockery::MockeryPackageTests::ProductTarget" /* MockeryPackageTests */,
				"Mockery::MockeryTests" /* MockeryTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		84F42F952343F64B00F09426 /* SwiftLint */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = SwiftLint;
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#if which swiftlint >/dev/null; then\nswiftlint\n#else\n#  echo \"warning: SwiftLint not installed, download from https://github.com/realm/SwiftLint\"\n#fi\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_129 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_130 /* Escaping.swift in Sources */,
				OBJ_131 /* Execution.swift in Sources */,
				OBJ_132 /* Mock.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_138 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_139 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_149 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_150 /* MockClass.swift in Sources */,
				OBJ_151 /* MockProtocol.swift in Sources */,
				OBJ_152 /* MockTests.swift in Sources */,
				OBJ_153 /* XCTestManifests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_144 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Mockery::MockeryTests" /* MockeryTests */;
			targetProxy = 84F42F892343F43400F09426 /* PBXContainerItemProxy */;
		};
		OBJ_165 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Mockery::Mockery" /* Mockery */;
			targetProxy = 84F42F882343F43300F09426 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_127 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Mockery.xcodeproj/Mockery_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"$(TOOLCHAIN_DIR)/usr/lib/swift/macosx",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Mockery;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = Mockery;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_128 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Mockery.xcodeproj/Mockery_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"$(TOOLCHAIN_DIR)/usr/lib/swift/macosx",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Mockery;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = Mockery;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
		OBJ_136 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -package-description-version 5.1";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		OBJ_137 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -package-description-version 5.1";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
		OBJ_142 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_143 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_147 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/Quick/Sources/QuickSpecBase/include",
				);
				INFOPLIST_FILE = Mockery.xcodeproj/MockeryTests_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@loader_path/../Frameworks",
					"@loader_path/Frameworks",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = MockeryTests;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_148 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/Quick/Sources/QuickSpecBase/include",
				);
				INFOPLIST_FILE = Mockery.xcodeproj/MockeryTests_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@loader_path/../Frameworks",
					"@loader_path/Frameworks",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = MockeryTests;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
					"DEBUG=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "$(inherited) -DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE DEBUG";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "$(inherited) -DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE";
				SWIFT_COMPILATION_MODE = wholemodule;
				SWIFT_OPTIMIZATION_LEVEL = "-O";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_126 /* Build configuration list for PBXNativeTarget "Mockery" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_127 /* Debug */,
				OBJ_128 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_135 /* Build configuration list for PBXNativeTarget "MockeryPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_136 /* Debug */,
				OBJ_137 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_141 /* Build configuration list for PBXAggregateTarget "MockeryPackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_142 /* Debug */,
				OBJ_143 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_146 /* Build configuration list for PBXNativeTarget "MockeryTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_147 /* Debug */,
				OBJ_148 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_2 /* Build configuration list for PBXProject "Mockery" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */

/* Begin XCRemoteSwiftPackageReference section */
		84F42F8F2343F60A00F09426 /* XCRemoteSwiftPackageReference "Quick" */ = {
			isa = XCRemoteSwiftPackageReference;
			repositoryURL = "https://github.com/Quick/Quick.git";
			requirement = {
				kind = upToNextMajorVersion;
				minimumVersion = 2.2.0;
			};
		};
		84F42F922343F61F00F09426 /* XCRemoteSwiftPackageReference "Nimble" */ = {
			isa = XCRemoteSwiftPackageReference;
			repositoryURL = "https://github.com/Quick/Nimble.git";
			requirement = {
				kind = exactVersion;
				version = 8.0.2;
			};
		};
/* End XCRemoteSwiftPackageReference section */

/* Begin XCSwiftPackageProductDependency section */
		84F42F902343F60A00F09426 /* Quick */ = {
			isa = XCSwiftPackageProductDependency;
			package = 84F42F8F2343F60A00F09426 /* XCRemoteSwiftPackageReference "Quick" */;
			productName = Quick;
		};
		84F42F932343F61F00F09426 /* Nimble */ = {
			isa = XCSwiftPackageProductDependency;
			package = 84F42F922343F61F00F09426 /* XCRemoteSwiftPackageReference "Nimble" */;
			productName = Nimble;
		};
/* End XCSwiftPackageProductDependency section */
	};
	rootObject = OBJ_1 /* Project object */;
}
